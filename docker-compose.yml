version: '3'
services:
    #######################################################
    #  SURICATA
    #######################################################
  suricata:
    build:
      context: ./services
      dockerfile: ./suricata/Dockerfile
    cap_add: 
      - NET_ADMIN
      - SYS_NICE
    volumes:
      - ./services/suricata/config/enable.conf:/etc/suricata/enable.conf:rw
      - ./services/suricata/config/disable.conf:/etc/suricata/disable.conf:rw
      - ./services/suricata/config/suricata.yaml:/etc/suricata/suricata.yaml:rw
      - ${IDS_LOG_DIR?Please specify the logs directoy in the .env file}/suricata:/var/log/suricata:rw
      - ${IDS_LOG_DIR?Please specify the logs directoy in the .env file}/suricata:/home/suricata
      - ./services/suricata/dataset:/home/dataset
    environment:
      - SURICATA_OPTIONS=-i ${INTERFACE?Please specify the network interface in the .env file} --set vars.address-groups.HOME_NET=["192.168.0.0/16","10.0.0.0/8"]
      - PGID=${GID:-1000}
      - PUID=${UID:-1000}
    network_mode: host
    
    #######################################################
    #  ZEEK
    #######################################################
  zeek:
    build:
      context: ./services
      dockerfile: ./zeek/Dockerfile
    command: -i ${INTERFACE?Please specify the network interface in the .env file}
    cap_add:
      - NET_ADMIN
    volumes:
      - ${IDS_LOG_DIR}/zeek:/var/log/zeek:rw
      - ./services/zeek/config/local.zeek:/usr/local/zeek/share/zeek/site/local.zeek:ro
    environment:
      - TRUSTED_NET=["192.168.0.0/16","10.0.0.0/8"]
      - PGID=${GID:-1000}
      - PUID=${UID:-1000}
    network_mode: host
    
    #######################################################
    #  SLIPS
    #######################################################    
  slips:
    image: stratosphereips/slips:latest
    stdin_open: true
    tty: true
    cap_add:
      - NET_ADMIN
      - SYS_NICE
    volumes:
      - ./services/slips/config/slips.conf:/StratosphereLinuxIPS/slips.conf:rw
      - ./services/slips/dataset:/StratosphereLinuxIPS/dataset/
      - ${IDS_LOG_DIR?Please specify the logs directoy in the .env file}/slips:/StratosphereLinuxIPS/output/:rw
    network_mode: host
    entrypoint: ["bash", "-c", "redis-server --daemonize yes && python3 ./slips.py -i ${INTERFACE?Please specify the network interface in the .env file}"]
    #to start a specific data set, you can set the entrypoint to the following:
    #entrypoint: ["bash", "-c", "redis-server --daemonize yes && python3 ./slips.py -f /StratosphereLinuxIPS/dataset/test12-icmp-portscan.pcap"]
    
    #######################################################
    #  Elassticksearch
    #######################################################
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:latest
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data 
    environment:
      - ES_JAVA_OPTS=-Xmx512m -Xms512m
      - ELASTICSEARCH_USERNAME=${USERNAME:-elasticUsername}
      - ELASTIC_PASSWORD=${PASSWORD:-changeme}
      - XPACK_SECURITY_ENABLED=true
      - discovery.type=single-node
    networks:
      - elk
      
    #######################################################
    #  Filebeat
    #######################################################
  filebeat:
    build:
      context: ./services
      dockerfile: ./filebeat/Dockerfile
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_PASSWORD=${PASSWORD:-changeme}
      - LOG_DIR=/var/log/ids
      - TRUSTED_NET=["192.168.0.0/16","10.0.0.0/8"]
    volumes:
      - ./services/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:rw
      - ./services/filebeat/modules.d/:/usr/share/filebeat/modules.d:rw
      - ./services/filebeat/kibana/:/usr/share/filebeat/kibana:ro 
      -  ${IDS_LOG_DIR}/:/var/log/ids/:z 
    networks:
      - elk
    depends_on:
      - kibana
      
    #######################################################
    #  Kibana
    #######################################################
  kibana:
    image: docker.elastic.co/kibana/kibana:latest
    environment:
      - ELASTICSEARCH_USERNAME=${USERNAME:-elasticUsername}
      - ELASTICSEARCH_PASSWORD=${PASSWORD:-changeme}
      - XPACK_SECURITY_ENABLED=true
      - XPACK_SECURITY_ENCRYPTIONKEY=${KEY:-something_at_least_32_characters}
      - LOGGING_QUIET=true
    volumes:
      - ./services/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    ports:
      - ${KIBANA_PORT:-5601}:5601
    networks:
      - elk
    depends_on:
      - elasticsearch

networks:  
  elk:
    driver: bridge
volumes:
  elasticsearch:
